type Items {
  item_id: Int
  name: String
  price: Float
  quantity: Int
}
type TrackingItems {
  customer_id: String
  items: [Items]
  customer: Customer
    @materializer(
      query: "getCustomerById"
      arguments: [{
        name: "id",
        field: "customer_id"
      }]
    )
}

type TrackingItemsList {
  name: ID
  value: TrackingItems
}

type Query {
  # Making it dynamic by passing the ID
  getTrackingItemsById(id: ID!): TrackingItems
    @rest(
      endpoint: "https://ups-clone-firebase-default-rtdb.firebaseio.com/trackingItems/$id.json"
    )

  getTrackingItems: [TrackingItemsList]
      @rest(
        endpoint: "https://ups-clone-firebase-default-rtdb.firebaseio.com/trackingItems.json"
        transforms: [{ pathpattern: [], editor: "objectToArray" }]
      )
}
